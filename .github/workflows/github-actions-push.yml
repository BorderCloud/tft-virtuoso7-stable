name: Build docker
on: push

env:
    URI: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}       
    NAME: "Virtuoso Open-Source Edition"
    SOFTWARE_DESCRIBE: Virtuoso is a high-performance and scalable Multi-Model RDBMS, Data Integration Middleware, Linked Data Deployment, and HTTP Application Server Platform"
    VERSION: "stable/7.20.3233"
    SPARQLSCORE_DATABASE: "134.158.74.239"
#       SPARQLSCORE_DATABASE="172.18.0.6:8080" #local

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
            php-version: '7.4'
            tools: composer
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
            distribution: 'adopt'
            java-version: '8'
      - name: Build image docker
        run: >-
            docker build -t tft-virtuoso7-stable .
      - name: Start servers
        run:  |
            sudo docker-compose up -d
            sleep 30s
      - name: Setup TFT with Jmeter
        run: |
            git clone --recursive https://github.com/BorderCloud/TFT.git
            cd ./TFT
            composer install
            wget http://mirrors.standaloneinstaller.com/apache//jmeter/binaries/apache-jmeter-5.4.1.tgz
            tar xvzf apache-jmeter-5.4.1.tgz
            mv  apache-jmeter-5.4.1 jmeter
            rm apache-jmeter-5.4.1.tgz
            php -version
      - name: Execute tests
        run: |
            cd ./TFT
            php ./tft -t fuseki -q http://${SPARQLSCORE_DATABASE}/test/query -u http://${SPARQLSCORE_DATABASE}/test/update -tt virtuoso -te http://172.18.0.2/sparql -r ${URI} -o ./junit --softwareName="${NAME}" --softwareDescribeTag=${VERSION}  --softwareDescribe="${TRAVIS_COMMIT}"
      - name: Read result
        run: |
            cd ./TFT
            php ./tft-score -t fuseki -q http://${SPARQLSCORE_DATABASE}/test/query -u http://${SPARQLSCORE_DATABASE}/test/update -r  ${URI}
      - name: Stop servers
        run:  |
          docker-compose stop
#  publish:
#    name: Save the Docker image
#    if: ${{ github.ref == 'master' }}
#    needs: test
#    echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin;
#    docker tag tft-virtuoso7-stable bordercloud/tft-virtuoso7-stable:latest ;
#    docker push bordercloud/tft-virtuoso7-stable;
